@attribute [Route(Paths.Form)]

<PageTitle>Form</PageTitle>

<h1>Form</h1>
<p>Example of Form with validations and Command execution.</p>

<EditForm Model="_command" OnValidSubmit="Execute" OnInvalidSubmit="ConditionalExecute">
    <div class="form-check form-switch">
        <InputCheckbox class="form-check-input" @bind-Value="_frontendValidation" />
        <label class="form-check-label" for="mySwitch">Frontend validations block execution (Turn off to demonstrate backend validates too and same way)</label>
    </div>
    <hr />
    <label>Text: </label> <ValidationMessage For="() => _command.Text" />
    <InputText class="form-control mb-3" @bind-Value="_command.Text" />

    <label>Number: </label> <ValidationMessage For="() => _command.Number" />
    <InputNumber class="form-control mb-3" @bind-Value="_command.Number" />

    <label>DateTime: </label> <ValidationMessage For="() => _command.DateTime" />
    <InputDate class="form-control mb-3" @bind-Value="_command.DateTime" />

    <div class="form-check">
        <InputCheckbox class="form-check-input" @bind-Value="_command.Checkbox" />
        <label class="form-check-label">Checkbox</label>
    </div>
    <ValidationMessage For="() => _command.Checkbox" />

    <hr />

    <FormValidation />

    @if (_saving)
    {
        <p>Saving...</p>
    }
    else
    {
        <button type="submit" class="btn btn-primary">Submit</button>
    }
</EditForm>

@code {
    private FormCommand _command = new();
    private bool _saving;
    private bool _frontendValidation = true;

    private async Task ConditionalExecute()
    {
        if (!_frontendValidation)
        {
            await Execute();
        }
    }

    private async Task Execute()
    {
        _saving = true;
        if (await CommandExecutor.Send(_command))
        {
            ToastService.ShowSuccess("Success!");
        }
        _saving = false;
    }
}
